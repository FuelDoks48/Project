# first_name = "ada"                            
# last_name = "lovelance"                       
# full_name = first_name + " " + last_name      

# print('Hello,'+ " " + full_name.title() + "!")

# Сделанно для того что бы Отображалась первая бука в верхнем регистре

# ________________________________________________________________________________________________________________________________
# favorite_language = " Johny"
# favorite_language = favorite_language.rstrip()
# print(favorite_language)

# Убран правый пробел
# ________________________________________________________________________________________________________________________________

# name = "Johny"
# print('Hello, ' + name + " would you like to learn some Python today?")
# Конкатенация
# ________________________________________________________________________________________________________________________________

# name = "Oda Nobu"
# print(name.title(),name.upper(),name.lower())
# Код для вызова имени каждого нового слова в верхнем регистре,верхнем и нижнем.
# ________________________________________________________________________________________________________________________________

# bicycle = ["reline", "Stels", "ns bike", "darkmoor",]
# print(bicycle)


# Работа со списком

# ________________________________________________________________________________________________________________________________

# bicycles = ["reline", "Stels", "ns bike", "darkmoor",]
# print('My first bicycles was a ' + bicycles[-2].title())

# Индексация и Конкатенация списка

# ________________________________________________________________________________________________________________________________


# motocycles = ["reline", "Stels", "ns bike", "darkmoor",]
# print(motocycles)

# motocycles[-2] = 'merida'
# print(motocycles) 

# Пример динамического списка,путем изменения по индексации элемента

# ________________________________________________________________________________________________________________________________

# motocycles = []
# motocycles.append('honda')
# motocycles.append('toyota')
# motocycles.append('Harley')
# motocycles.append('Yamaha')

# print(motocycles)

# Добавление с помощью метода append элементов списка.

# ________________________________________________________________________________________________________________________________

# motocycles = ["reline", "Stels", "ns bike", "darkmoor",]
# motocycles.insert(0, 'toyota')

# print(motocycles)

# Добавление с помощью метода insert, индексацией.

# ________________________________________________________________________________________________________________________________

# motocycles = ["reline", "Stels", "ns bike", "darkmoor",]
# del motocycles[0]
# print(motocycles)

# Удаление с помощью команды del навсегда(с ним не возможно будет работать) по индексации,первого элемента.

# ________________________________________________________________________________________________________________________________

# motocycles = ["reline", "Stels", "ns bike", "darkmoor",]
# print(motocycles)

# popped_motocycles = motocycles.pop()
# print(motocycles)
# print(popped_motocycles)

# Удаление элемента списка с индексацией,но с ним ещё возможно работать!
# Последний удаленный элемент, храниться теперь в переменной popped_motocycles

# ________________________________________________________________________________________________________________________________

# motocycles = ["reline", "Stels", "ns bike", "darkmoor",]

# last_owned = motocycles.pop()
# print("The last motorcycle I owned was a " + last_owned.title() + '.')

# Метод pop() позволяет вызвать последнее значение в списке.

# ________________________________________________________________________________________________________________________________

# motocycles = ["reline", "Stels", "ns bike", "darkmoor",]

# last_owned = 'Stels'
# motocycles.remove(last_owned)
# print(motocycles)
# print("\n This " + last_owned.title() + " bike is very fragile")

# Удаление из списка с помощью метода remove,по поиску слова через присваивание переменной!

# ________________________________________________________________________________________________________________________________
